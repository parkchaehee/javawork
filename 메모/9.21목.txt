http://github.com/kiyongee2/javawork

인터페이스

에러(Error)와 예외(Exception)
- 에러: 하드웨어의 오작동
- 예외: 개발자의 잘못된 코딩으로 인한 오류
         사용자의 잘못된 조작으로 인한 오류
         해당 프로그램이 비정상적으로 정지됨

예외의 종류 
- 일반 예외 : 실행전 발생, 컴파일러가 체크해줌
- 실행(Run Time) 예외 : 실행했을때 오류발생
              개발자 경험, 예측으로 예외 코드 작성해야함

리소스 닫기
1. 구현1
try ~ catch ~ finally문
close()를 finally안에 작성함

2. 구현2
try ~with~resource문
close()를 사용하지않음(finally생략)

throws 구문
- 예외처리를 미뤄놓음(연기함)
- 필요사, 사용처에서 try~catch해야함

자료 구조
배열 > ArrayList 클래스 > Map
배열의 크기에 맞춰서 데이터 삽입, 삭제

ArrayList
 - 싱글쓰레드에서 사용함
 - 순서가 있고, 중복 데이터 허용됨
 - 삽입, 삭제시 저장된 데이터 크기가 자동으로 정해짐
 - 객체가 제거되면 바로 뒤 인덱스부터 앞으로 1씩 당겨짐
- add(), get(), set(), remove()

Vector(벡터)
- ArrayList와 동일한 자료구조를 가지고 있다.
- 멀티쓰레드로 동작하므로 안전하게 객체를 추가,삭제할수있음
- 멀티쓰레드 프로세스에서 작업할때 사용
- 하나의스레드가 실행완료해야만 다른스레드의 메서드가실행됨

***Set(인터페이스) - HashSet***
- 순서가 없고 중복 불허
- 동일 객체는 중복저장하지않음
  (hashCode(), equals()를 사용해서 논리적으로 일치시김)
- add(), get(), set(), remove()

**Map(인터페이스) - HashMap(구현클래스)사용***
- 키(key)와 값(value)의 쌍으로 저장
- 키는 중복저장 안됨, 값은 변경가능
- put(저장), get(), set(), contains()

[ArrayList를 이용한 회원관리 프로그램]
1. Member 클래스 정의 - 자료형(VO)
2. MemberArrayList 클래스(DAO) - 회원 생성, 조회, 수정, 삭제
3. Main - 테스트

[HashMap을 이용한 회원관리]

List - ArrayList, Stack, Queue
Set - 
Map - 

collection 프레임워크(라이브러리)
자료구조(Data Structure)
p404 12장

ArrayList - 자료구조, 중복허용, hashCode(), equals() 불필요
HashSet  - hashCode(), equals() 재정의 필요
HashMap - hashCode(), equals() 불필요(중복 허용안됨)

Map 인터페이스
- 키key와 값value의 쌍으로 저장
- 키는 중복저장 안되고, 값은 가능
- 구현클래스 : HashMap, HashTable, TreeMap
