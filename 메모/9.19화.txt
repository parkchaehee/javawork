객체 지향 언어
추상 클래스 - 상속관계(다형성), 참조관계, 협력관계
abstract 부모(상위) 클래스
 - 추상 메서드 : abstract method(); //구현부가 없고 선언부만 있음
 - 구체 메서드

인터페이스(Interface) - 상속 관계 아님
implements
모두 추상메서드

*자료구조(데이트 관리 - CRUD-메모리(일시적) - SQL언어(DB언어(연속적)
데이터 생성(Create) - 변수, 상성, 배열
조회(읽기)(Read), 
수정(Update), 
삭제(Delete)


배열 -> ArrayList<E>()

템플릿 - 정형화된 패턴, 틀
템플릿 메서드 - 전체 기능의 흐름(시나리오) 정의
final run(){ //final붙이면 메서드 수정불가
 startCar(), drive(), stop(), turnoff()
{

교통수단이용하기
협력관계->상속관계(다형성)

Taxi 클래스 생성 - 카카오택시(객체이름)

배열 <-> ArrayList<>
배열 **인덱싱
ArrayList **함수
add(), get(), remove()

Subject[] subjects = new Suject[3]
ArrayList<Subject> subjectList = new ArrayList

인터페이스

List<String> list = new List<>()
List<Integer>
List<Subject>

인터페이스(Interface)
-클래스 또는 프로그램이 제공하는 기능을 선언하는 역할
예) 계산기
int add(int num1, int num2);//선언만/매개변수받음
int sub(int num1, int num2);


구현 클래스(class)가 있음
int add(int a, int b){
  return a + b
}
인터페이스 문제풀이
p.346

문자열 - 1차원 배열
String 클래스
-하위 메소드
charAt(1) - 인덱스의 문자를 리턴함
indexOf("a") - 있느냐 없느냐
subString() - 몇번 인덱스부터 문자추추

String -> StringBuilder, StringBuffer(문자열 연결, 같은 주소 사용)
집
git pull
git add .
-------------------
변경후 저장할때
cd c:/javaworks
git add .
git commit -m "interface"
git push
=================
파일 다운받을때
-처음 한번만 clone
1. cd :/javaworks
2. git clone 리포지터리 주소복붙
---http://github.com/kiyongee2/javawork.git
-두번째부터는
3. git pull

















